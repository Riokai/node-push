// Generated by CoffeeScript 1.6.3
(function() {
  var BaiduPlatform, baidu, crypto, request, _;

  _ = require('underscore');

  request = require('request');

  crypto = require('crypto');

  BaiduPlatform = (function() {
    var ksort, urlencode;

    function BaiduPlatform() {}

    urlencode = function(str) {
      return encodeURIComponent(str).replace(/!/g, '%21').replace(/'/g, '%27').replace(/\(/g, '%28').replace(/\)/g, '%29').replace(/\*/g, '%2A').replace(/%20/g, '+');
    };

    ksort = function(obj) {
      var k, keys, _i, _len, _obj;
      keys = _.keys(obj);
      keys.sort(function(x, y) {
        return x > y;
      });
      _obj = {};
      for (_i = 0, _len = keys.length; _i < _len; _i++) {
        k = keys[_i];
        _obj[k] = obj[k];
      }
      return _obj;
    };

    BaiduPlatform.prototype.errorCallback = function(err) {
      return console.error("BAIDU-ERROR: ", err);
    };

    BaiduPlatform.prototype.configure = function(options) {
      var key, val;
      if (options == null) {
        options = {};
      }
      for (key in options) {
        val = options[key];
        this[key] = val;
      }
      return this;
    };

    BaiduPlatform.prototype.send = function(data, callback) {
      if (callback == null) {
        callback = function() {};
      }
      console.log('Baidu sender');
      return callback(null, data);
    };

    BaiduPlatform.prototype.sign = function(method, url, params, secret) {
      var k, paramsStr, rawStr, v;
      params = ksort(params);
      paramsStr = ((function() {
        var _results;
        _results = [];
        for (k in params) {
          v = params[k];
          _results.push("" + k + "=" + v);
        }
        return _results;
      })()).join('');
      rawStr = urlencode("" + method + url + paramsStr + secret);
      return crypto.createHash('md5').update(rawStr).digest('hex');
    };

    BaiduPlatform.prototype.pushMsg = function(data, callback) {
      var method, secret, url;
      if (callback == null) {
        callback = function() {};
      }
      url = 'http://channel.api.duapp.com/rest/2.0/channel/channel';
      method = 'POST';
      secret = data.secret;
      delete data.secret;
      data.sign = this.sign(method, url, data, secret);
      return request({
        uri: url,
        method: method,
        form: data
      }, function(err, res, body) {
        return callback(err, body);
      });
    };

    return BaiduPlatform;

  })();

  baidu = new BaiduPlatform;

  baidu.BaiduPlatform = BaiduPlatform;

  module.exports = baidu;

}).call(this);
