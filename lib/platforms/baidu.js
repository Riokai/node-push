// Generated by CoffeeScript 1.7.1
(function() {
  var BaiduPlatform, baidu, crypto, request, _;

  _ = require('underscore');

  request = require('request');

  crypto = require('crypto');

  BaiduPlatform = (function() {
    var ksort, urlencode;

    BaiduPlatform.prototype.host = 'http://channel.api.duapp.com';

    BaiduPlatform.prototype.apiUri = '/rest/2.0/channel/channel';

    BaiduPlatform.prototype.apiMethod = 'POST';

    function BaiduPlatform() {
      this.apiKey = '';
      this.apiSecret = '';
    }

    urlencode = function(str) {
      return encodeURIComponent(str).replace(/!/g, '%21').replace(/'/g, '%27').replace(/\(/g, '%28').replace(/\)/g, '%29').replace(/\*/g, '%2A').replace(/%20/g, '+');
    };

    ksort = function(obj) {
      var k, keys, _i, _len, _obj;
      keys = _.keys(obj);
      keys.sort(function(x, y) {
        return x > y;
      });
      _obj = {};
      for (_i = 0, _len = keys.length; _i < _len; _i++) {
        k = keys[_i];
        _obj[k] = obj[k];
      }
      return _obj;
    };

    BaiduPlatform.prototype.callback = function(err, res) {
      if (err != null) {
        return console.error("BAIDU-ERROR: ", err, res);
      }
    };

    BaiduPlatform.prototype.configure = function(options) {
      var key, val;
      if (options == null) {
        options = {};
      }
      for (key in options) {
        val = options[key];
        this[key] = val;
      }
      return this;
    };

    BaiduPlatform.prototype.sign = function(params) {
      var k, paramsStr, rawStr, url, v;
      url = this.host + this.apiUri;
      params = ksort(params);
      paramsStr = ((function() {
        var _results;
        _results = [];
        for (k in params) {
          v = params[k];
          _results.push("" + k + "=" + v);
        }
        return _results;
      })()).join('');
      rawStr = urlencode("" + this.apiMethod + url + paramsStr + this.apiSecret);
      return crypto.createHash('md5').update(rawStr).digest('hex');
    };

    BaiduPlatform.prototype.gMsgKeys = function(bits) {
      var chars, i, rand, ret;
      if (bits == null) {
        bits = 64;
      }
      rand = Math.floor(Math.random() * 0x100000000);
      chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';
      ret = '';
      i = 26;
      while (bits > 0) {
        i -= 6;
        bits -= 6;
        ret += chars[0x3F & rand >>> i];
      }
      return ret;
    };

    BaiduPlatform.prototype.send = function(data, callback) {
      var _ref;
      if (data == null) {
        data = {};
      }
      data.apikey = this.apiKey;
      data.method || (data.method = 'push_msg');
      data.push_type || (data.push_type = 1);
      data.timestamp = Math.round(Date.now() / 1000);
      data.msg_keys = 'teambition';
      if ((_ref = data.message_type) !== 0 && _ref !== 1) {
        data.message_type = 0;
      }
      data.sign = this.sign(data);
      callback || (callback = this.callback);
      return request({
        uri: this.host + this.apiUri,
        method: this.apiMethod,
        form: data
      }, function(err, res, body) {
        var e;
        try {
          return callback(err, JSON.parse(body));
        } catch (_error) {
          e = _error;
          return callback(e, body);
        }
      });
    };

    return BaiduPlatform;

  })();

  baidu = new BaiduPlatform;

  baidu.BaiduPlatform = BaiduPlatform;

  module.exports = baidu;

}).call(this);
