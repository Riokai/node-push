// Generated by CoffeeScript 1.6.3
(function() {
  var LuosimaoSMS, exports, luosimao, request;

  request = require('request');

  LuosimaoSMS = (function() {
    var sendURI, statusURI;

    sendURI = 'https://sms-api.luosimao.com/v1/send.json';

    statusURI = 'https://sms-api.luosimao.com/v1/status.json';

    function LuosimaoSMS() {
      this.user = '';
      this.apiKey = '';
    }

    LuosimaoSMS.prototype.configure = function(options) {
      var key, val;
      if (options == null) {
        options = {};
      }
      for (key in options) {
        val = options[key];
        this[key] = val;
      }
      return this;
    };

    LuosimaoSMS.prototype.send = function(postData, callback) {
      var options;
      if (postData.mobile == null) {
        return callback(Error('Mobile field is required'));
      }
      if (postData.message == null) {
        return callback(Error('Message field is required'));
      }
      if (postData.message.length > 67) {
        return callback(Error('The max length of message field is 67'));
      }
      options = {
        uri: sendURI,
        useQueryString: true,
        method: 'POST',
        encoding: 'utf8',
        timeout: 5000,
        form: postData,
        auth: {
          user: this.user,
          pass: this.apiKey
        }
      };
      return request(options, function(error, response, body) {
        body = JSON.parse(body);
        return callback(error, body);
      });
    };

    LuosimaoSMS.prototype.status = function(callback) {
      var options;
      options = {
        uri: statusURI,
        method: 'GET',
        timeout: 5000,
        auth: {
          user: this.user,
          pass: this.apiKey
        },
        encoding: 'utf8'
      };
      return request(options, function(error, response, body) {
        body = JSON.parse(body);
        return callback(error, body);
      });
    };

    return LuosimaoSMS;

  })();

  luosimao = new LuosimaoSMS;

  luosimao.LuosimaoSMS = LuosimaoSMS;

  exports = module.exports = luosimao;

}).call(this);
