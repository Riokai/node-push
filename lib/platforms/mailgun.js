// Generated by CoffeeScript 1.6.3
(function() {
  var Mailgun, exports, https, mailgun, qs, request;

  qs = require('qs');

  https = require('https');

  request = require('request');

  Mailgun = (function() {
    function Mailgun() {}

    Mailgun.prototype.apiUrl = 'api.mailgun.net';

    Mailgun.prototype.apiKey = '';

    Mailgun.prototype.domain = '';

    Mailgun.prototype.errorCallback = function(err) {
      return console.error("MAILGUN-ERROR: ", err);
    };

    Mailgun.prototype.configure = function(options) {
      var key, val;
      if (options == null) {
        options = {};
      }
      for (key in options) {
        val = options[key];
        this[key] = val;
      }
      return this;
    };

    Mailgun.prototype.send = function(data, callback) {
      var body, httpOptions, req,
        _this = this;
      if (callback == null) {
        callback = function() {};
      }
      if (!this.apiKey) {
        throw new Error("apiKey is required");
      }
      if (!this.domain) {
        throw new Error("domain is required");
      }
      httpOptions = {
        host: this.apiUrl,
        method: 'post',
        path: "/v2/" + this.domain + "/messages",
        auth: "api:" + this.apiKey
      };
      body = qs.stringify(data);
      httpOptions.headers = {};
      httpOptions.headers['Content-Type'] = 'application/x-www-form-urlencoded';
      httpOptions.headers['Content-Length'] = Buffer.byteLength(body);
      req = https.request(httpOptions, function(res) {
        var ret;
        res.setEncoding('utf8');
        ret = '';
        res.on('data', function(chunk) {
          return ret += chunk;
        });
        return res.on('end', function() {
          return callback(null, JSON.parse(ret));
        });
      });
      req.on('error', function(err) {
        return errorCallback(err);
      });
      return req.end(body);
    };

    return Mailgun;

  })();

  mailgun = new Mailgun;

  mailgun.Mailgun = Mailgun;

  exports = module.exports = mailgun;

}).call(this);
