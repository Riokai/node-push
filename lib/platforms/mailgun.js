// Generated by CoffeeScript 1.7.1
(function() {
  var Mailgun, exports, mailgun, request;

  request = require('request');

  Mailgun = (function() {
    Mailgun.prototype.apiUrl = 'api.mailgun.net';

    function Mailgun() {
      this.apiKey = '';
      this.domain = '';
    }

    Mailgun.prototype.callback = function(err, res) {
      if (err != null) {
        return console.error("MAILGUN-ERROR: ", err, res);
      }
    };

    Mailgun.prototype.configure = function(options) {
      var key, val;
      if (options == null) {
        options = {};
      }
      for (key in options) {
        val = options[key];
        this[key] = val;
      }
      return this;
    };

    Mailgun.prototype.send = function(data, callback) {
      var api;
      callback || (callback = this.callback);
      if (!this.domain) {
        throw new Error("domain is required");
      }
      api = "https://" + this.apiUrl + "/v2/" + this.domain + "/messages";
      return this.request(api, data, callback);
    };

    Mailgun.prototype.subscribe = function(listAddress, data, callback) {
      var api;
      if (data == null) {
        data = {};
      }
      if (callback == null) {
        callback = function() {};
      }
      api = "https://" + this.apiUrl + "/v2/lists/" + listAddress + "/members";
      return this.request(api, data, callback);
    };

    Mailgun.prototype.unsubscribe = function(listAddress, data, callback) {
      var api;
      if (data == null) {
        data = {};
      }
      if (callback == null) {
        callback = function() {};
      }
      api = "https://" + this.apiUrl + "/v2/lists/" + listAddress + "/members/" + data.address;
      data.method = 'put';
      return this.request(api, data, callback);
    };

    Mailgun.prototype.request = function(api, data, callback) {
      if (!this.apiKey) {
        throw new Error("apiKey is required");
      }
      return request({
        method: data.method || 'post',
        url: api,
        auth: {
          user: "api:" + this.apiKey
        },
        form: data
      }, function(err, resp, ret) {
        var e;
        try {
          ret = JSON.parse(ret);
        } catch (_error) {
          e = _error;
          err || (err = e);
        }
        return callback(err, ret);
      });
    };

    return Mailgun;

  })();

  mailgun = new Mailgun;

  mailgun.Mailgun = Mailgun;

  exports = module.exports = mailgun;

}).call(this);
