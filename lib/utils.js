// Generated by CoffeeScript 1.6.3
(function() {
  var findPath, glob, safeServName;

  glob = require('glob');

  safeServName = function(servName) {
    return servName.replace(/[.\-_]/g, '/');
  };

  findPath = function(servName, ignoreError) {
    var ms, pt;
    if (ignoreError == null) {
      ignoreError = true;
    }
    servName = safeServName(servName);
    pt = "platforms/**/" + servName + ".coffee";
    ms = glob(pt, {
      mark: true,
      cwd: __dirname,
      sync: true
    });
    if (ms.length === 0) {
      if (!ignoreError) {
        throw new Error("" + servName + " not found");
      }
      return;
    }
    if (ms.length > 1) {
      if (!ignoreError) {
        throw new Error("please specil service type, example: email." + servName);
      }
      return;
    }
    return ms[0];
  };

  exports.findBackendPathByServName = function(servName, ignoreError) {
    var paths, sn, _i, _len;
    if (ignoreError == null) {
      ignoreError = true;
    }
    if (typeof servName === 'string') {
      return findPath(servName, ignoreError);
    }
    if (servName instanceof Array) {
      paths = {};
      for (_i = 0, _len = servName.length; _i < _len; _i++) {
        sn = servName[_i];
        paths[sn] = findPath(sn, ignoreError);
      }
      return paths;
    }
    throw new Error('Unsupport find: ' + servName);
  };

}).call(this);
